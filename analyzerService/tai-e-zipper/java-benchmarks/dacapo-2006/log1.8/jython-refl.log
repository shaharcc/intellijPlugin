Array.newInstance;java.lang.reflect.Field[];sun.reflect.Reflection.filter;312;;
Array.newInstance;java.lang.reflect.Method[];java.util.Arrays.copyOf;3212;;
Array.newInstance;java.lang.String[];java.util.Arrays.copyOf;3212;;
Array.newInstance;org.python.core.PyObject[];java.util.Arrays.copyOf;3212;;
Array.newInstance;org.python.core.PyObject[];org.python.core.AbstractArray.<init>;;;
Array.newInstance;org.python.core.PyObject[];org.python.core.AbstractArray.setNewBase;;;
Array.newInstance;sun.security.jca.ProviderConfig[];java.util.Arrays.copyOf;3212;;
Class.forName;dacapo.Benchmark;dacapo.Benchmark.class$;439;;
Class.forName;dacapo.Benchmark;dacapo.TestHarness.class$;60;;
Class.forName;dacapo.jython.JythonHarness;dacapo.TestHarness.findClass;414;;
Class.forName;dacapo.parser.Config;dacapo.TestHarness.class$;60;;
Class.forName;dacapo.TestHarness;dacapo.TestHarness.class$;60;;
Class.forName;java.io.File;dacapo.TestHarness.class$;60;;
Class.forName;java.io.File;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;java.io.Serializable;org.python.core.PyClass.class$;;;
Class.forName;java.io.Serializable;org.python.core.PyFloat.class$;;;
Class.forName;java.io.Serializable;org.python.core.PyInstance.class$;;;
Class.forName;java.io.Serializable;org.python.core.PyInteger.class$;;;
Class.forName;java.io.Serializable;org.python.core.PyType.class$;;;
Class.forName;java.lang.Boolean;org.python.core.PyInteger.class$;;;
Class.forName;java.lang.Byte;org.python.core.PyInteger.class$;;;
Class.forName;java.lang.Character;org.python.core.PyString.class$;;;
Class.forName;java.lang.Class;org.python.core.Py.class$;;;
Class.forName;java.lang.Class;org.python.core.PyClass.class$;;;
Class.forName;java.lang.Class;org.python.core.PyType.class$;;;
Class.forName;java.lang.Double;org.python.core.PyFloat.class$;;;
Class.forName;java.lang.Double;org.python.core.PyInteger.class$;;;
Class.forName;java.lang.Float;org.python.core.PyFloat.class$;;;
Class.forName;java.lang.Float;org.python.core.PyInteger.class$;;;
Class.forName;java.lang.Integer;org.python.core.PyInteger.class$;;;
Class.forName;java.lang.Long;org.python.core.PyInteger.class$;;;
Class.forName;java.lang.Number;org.python.core.PyFloat.class$;;;
Class.forName;java.lang.Number;org.python.core.PyInteger.class$;;;
Class.forName;java.lang.Object;org.python.core.PyClass.class$;;;
Class.forName;java.lang.Object;org.python.core.PyFloat.class$;;;
Class.forName;java.lang.Object;org.python.core.PyInstance.class$;;;
Class.forName;java.lang.Object;org.python.core.PyInteger.class$;;;
Class.forName;java.lang.Object;org.python.core.PyType.class$;;;
Class.forName;java.lang.Object;org.python.core.ReflectedArgs.class$;;;
Class.forName;java.lang.Object;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;java.lang.Short;org.python.core.PyInteger.class$;;;
Class.forName;java.lang.String;org.python.core.ArgParser.class$;;;
Class.forName;java.lang.String;org.python.core.Py.class$;;;
Class.forName;java.lang.String[];org.python.core.Py.class$;;;
Class.forName;java.lang.String;org.python.core.PyString.class$;;;
Class.forName;java.lang.String;org.python.core.ReflectedArgs.class$;;;
Class.forName;java.lang.String[];org.python.core.ReflectedArgs.class$;;;
Class.forName;java.lang.String;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;java.lang.System;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;java.lang.Throwable;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;java.math.BigInteger;org.python.core.PyLong.class$;;;
Class.forName;java.security.MessageDigestSpi;java.security.Security.getSpiClass;675;;
Class.forName;java.util.Collection;org.python.core.CollectionIter2.<init>;;;
Class.forName;org.python.core.__builtin__;org.python.core.PySystemState.class$;;;
Class.forName;org.python.core.BytecodeLoader2;org.python.core.BytecodeLoader.makeLoader;;;
Class.forName;org.python.core.BytecodeLoader;org.python.core.BytecodeLoader.class$;;;
Class.forName;org.python.core.ClassDictInit;org.python.core.PyJavaClass.class$;;;
Class.forName;org.python.core.ClassDictInit;org.python.core.PyType.class$;;;
Class.forName;org.python.core.CollectionIter2;org.python.core.PyInstance.initializeIterators;;;
Class.forName;org.python.core.CollectionIter;org.python.core.PyInstance.initializeIterators;;;
Class.forName;org.python.core.exceptions;org.python.core.exceptions.class$;;;
Class.forName;org.python.core.exceptions;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.IdImpl2;org.python.core.IdImpl.getInstance;;;
Class.forName;org.python.core.imp;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.InitModule;org.python.core.PyJavaClass.class$;;;
Class.forName;org.python.core.InternalTables2;org.python.core.InternalTables.tryImpl;;;
Class.forName;org.python.core.PyArray;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyBaseString;org.python.core.PyUnicode.class$;;;
Class.forName;org.python.core.PyBuiltinFunction;org.python.core.PyBuiltinFunction.class$;;;
Class.forName;org.python.core.PyClassMethod;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyClassMethod;org.python.core.PyClassMethod.class$;;;
Class.forName;org.python.core.PyClass;org.python.core.Py.class$;;;
Class.forName;org.python.core.PyClass;org.python.core.PyType.class$;;;
Class.forName;org.python.core.PyClass;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyClass;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyCode;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyComplex;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyComplex;org.python.core.PyComplex.class$;;;
Class.forName;org.python.core.PyComplex;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyComplex;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyDictionary;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyDictionary;org.python.core.PyDictionary.class$;;;
Class.forName;org.python.core.PyDictionary;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyDictionary;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyDictionary;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyEllipsis;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyEnumerate;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyEnumerate;org.python.core.PyEnumerate.class$;;;
Class.forName;org.python.core.PyException;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyFile;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyFile;org.python.core.PyFile.class$;;;
Class.forName;org.python.core.PyFile;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyFile;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyFloat;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyFloat;org.python.core.PyFloat.class$;;;
Class.forName;org.python.core.PyFloat;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyFloat;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyFloat;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyFrame;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyFrame;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyFunction;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyFunction;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyFunction;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyFunctionTable;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyGenerator;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyIgnoreMethodTag;org.python.core.PyJavaClass.class$;;;
Class.forName;org.python.core.PyIgnoreMethodTag;org.python.core.PyType.class$;;;
Class.forName;org.python.core.PyInstance;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyInstance;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyInteger;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyInteger;org.python.core.PyInteger.class$;;;
Class.forName;org.python.core.PyInteger;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyInteger;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyInteger;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyJavaClass;org.python.core.PyJavaClass.class$;;;
Class.forName;org.python.core.PyJavaClass;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyList;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyList;org.python.core.PyList.class$;;;
Class.forName;org.python.core.PyList;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyList;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyList;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyLong;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyLong;org.python.core.PyLong.class$;;;
Class.forName;org.python.core.PyLong;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyLong;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyLong;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyMethod;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyMethod;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyModule;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyNone;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyNone;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.imp.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.Py.class$;;;
Class.forName;org.python.core.PyObject[];org.python.core.Py.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.PyEnumerate.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.PyFile.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.PyJavaClass.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.PyList.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.PyNone.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.PyObjectArray.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.PyObject.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.PyType.class$;;;
Class.forName;org.python.core.PyObject[];org.python.core.ReflectedArgs.class$;;;
Class.forName;org.python.core.PyObject;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.Py;org.python.core.Py.class$;;;
Class.forName;org.python.core.Py;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyProperty;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyProperty;org.python.core.PyProperty.class$;;;
Class.forName;org.python.core.PyProxy;org.python.core.PyJavaClass.class$;;;
Class.forName;org.python.core.PyProxy;org.python.core.PyReflectedConstructor.class$;;;
Class.forName;org.python.core.PyReflectedFunction;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyReflectedFunction;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyRunnable;org.python.core.imp.class$;;;
Class.forName;org.python.core.PyRunnable;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PySlice;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyStaticMethod;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyStaticMethod;org.python.core.PyStaticMethod.class$;;;
Class.forName;org.python.core.PyStringMap;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyString;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyString;org.python.core.PyJavaClass.class$;;;
Class.forName;org.python.core.PyString;org.python.core.PyString.class$;;;
Class.forName;org.python.core.PyString;org.python.core.PyType.class$;;;
Class.forName;org.python.core.PyString;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyString;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyString;org.python.modules.types.class$;;;
Class.forName;org.python.core.PySuper;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PySuper;org.python.core.PySuper.class$;;;
Class.forName;org.python.core.PyTraceback;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyTuple;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyTuple;org.python.core.Py.class$;;;
Class.forName;org.python.core.PyTuple;org.python.core.PyTuple.class$;;;
Class.forName;org.python.core.PyTuple;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.core.PyTuple;org.python.modules.cPickle.class$;;;
Class.forName;org.python.core.PyTuple;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyType$Newstyle;org.python.core.PyType.class$;;;
Class.forName;org.python.core.PyType;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyType;org.python.core.PyType.class$;;;
Class.forName;org.python.core.PyUnicode;org.python.core.__builtin__.class$;;;
Class.forName;org.python.core.PyUnicode;org.python.core.PyUnicode.class$;;;
Class.forName;org.python.core.PyUnicode;org.python.modules.types.class$;;;
Class.forName;org.python.core.PyXRange;org.python.modules.types.class$;;;
Class.forName;org.python.core.ThreadStateMapping2;org.python.core.ThreadStateMapping.makeMapping;;;
Class.forName;org.python.core.ZipFileImporter;org.python.core.PySystemState.class$;;;
Class.forName;org.python.modules.cPickle;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.modules.operator;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.modules.os;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.modules._sre;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.modules.time;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.modules.types;org.python.core.SyspathJavaLoader.loadClass;;;
Class.forName;org.python.util.InteractiveConsole;org.python.util.jython.main;;;
Class.forName;sun.security.provider.SHA;java.security.Provider$Service.getImplClass;1634;;
Class.newInstance;Arithmetic$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Calls$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;CommandLine$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Constructs$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;copy_reg$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Dict$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Exceptions$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;fnmatch$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;getopt$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;glob$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Imports$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Instances$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;javaos$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;javapath$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;linecache$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Lists$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Lookups$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;NewInstances$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Numbers$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;org.python.core.BytecodeLoader2;org.python.core.BytecodeLoader.makeLoader;;;
Class.newInstance;org.python.core.CollectionIter2;org.python.core.PyInstance.initializeIterators;;;
Class.newInstance;org.python.core.CollectionIter;org.python.core.PyInstance.initializeIterators;;;
Class.newInstance;org.python.core.IdImpl2;org.python.core.IdImpl.getInstance;;;
Class.newInstance;org.python.core.InternalTables2;org.python.core.InternalTables.tryImpl;;;
Class.newInstance;org.python.core.ThreadStateMapping2;org.python.core.ThreadStateMapping.makeMapping;;;
Class.newInstance;org.python.pycode._pyx0;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;org.python.pycode._pyx1;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;org.python.util.InteractiveConsole;org.python.util.jython.main;;;
Class.newInstance;package$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;package.submodule$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;pybench$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;re$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Setup$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;site$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;sre_compile$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;sre_constants$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;sre_parse$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;sre$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;stat$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;string$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Strings$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;sun.net.www.protocol.file.Handler;sun.misc.Launcher$Factory.createURLStreamHandler;522;;
Class.newInstance;sun.net.www.protocol.jar.Handler;sun.misc.Launcher$Factory.createURLStreamHandler;522;;
Class.newInstance;sun.nio.cs.ISO_8859_1;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.UTF_16BE;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.UTF_16LE;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.UTF_16;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.UTF_8;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.fs.LinuxFileSystemProvider;sun.nio.fs.DefaultFileSystemProvider.createProvider;48;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor1;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor2;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor10;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor11;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor12;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor13;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor14;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor15;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor1;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor2;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor3;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor4;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor5;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor6;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor7;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor8;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor9;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.security.provider.Sun;sun.security.jca.ProviderConfig$2.run;221;;
Class.newInstance;sun.text.resources.BreakIteratorInfo;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.text.resources.en.FormatData_en;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.text.resources.en.FormatData_en_US;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.text.resources.FormatData;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.util.resources.CalendarData;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.util.resources.CurrencyNames;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.util.resources.en.CalendarData_en;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.util.resources.en.CurrencyNames_en_US;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.util.resources.en.TimeZoneNames_en;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;sun.util.resources.TimeZoneNames;java.util.ResourceBundle$Control.newBundle;2662;;
Class.newInstance;traceback$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Tuples$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;Unicode$py;org.python.core.BytecodeLoader.makeCode;;;
Class.newInstance;UserDict$py;org.python.core.BytecodeLoader.makeCode;;;
Constructor.newInstance;<Arithmetic$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Calls$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<CommandLine$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Constructs$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<copy_reg$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<dacapo.jython.JythonHarness: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.TestHarness.runBenchmark;270;isAccessible=false;
Constructor.newInstance;<Dict$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Exceptions$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<fnmatch$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<getopt$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<glob$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Imports$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Instances$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<java.io.File: void <init>(java.io.File,java.lang.String)>;org.python.core.PyReflectedConstructor.__call__;;isAccessible=false;
Constructor.newInstance;<java.io.File: void <init>(java.lang.String)>;org.python.core.PyReflectedConstructor.__call__;;isAccessible=false;
Constructor.newInstance;<javaos$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<javapath$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<linecache$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Lists$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Lookups$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<NewInstances$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Numbers$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.python.core.BytecodeLoader2: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.python.core.CollectionIter2: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.python.core.CollectionIter: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.python.core.IdImpl2: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.python.core.InternalTables2: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.python.core.ThreadStateMapping2: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.python.pycode._pyx0: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.python.pycode._pyx1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.python.util.InteractiveConsole: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<package$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<package.submodule$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<pybench$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<re$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Setup$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<site$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sre_compile$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sre_constants$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sre_parse$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sre$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<stat$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<string$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Strings$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor2: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor10: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor11: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor12: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor13: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor14: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor15: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor2: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor3: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor4: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor5: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor6: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor7: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor8: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor9: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.security.provider.SHA: void <init>()>;java.security.Provider$Service.newInstance;1595;isAccessible=false;
Constructor.newInstance;<sun.security.provider.Sun: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.BreakIteratorInfo: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.en.FormatData_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.en.FormatData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CalendarData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.en.CalendarData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.en.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.en.TimeZoneNames_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.TimeZoneNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<traceback$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Tuples$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<Unicode$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<UserDict$py: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Field.get*;<java.io.File: java.lang.String pathSeparator>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<java.io.File: java.lang.String separator>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.__builtin__: org.python.core.PyString __doc__zip>;org.python.core.PyJavaClass.addMethod;;isAccessible=false;
Field.get*;<org.python.core.PyBuiltinFunction: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyClassMethod: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyComplex: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyDictionary: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyEnumerate: java.lang.Class exposed_base>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyEnumerate: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyFile: java.lang.Class exposed_base>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyFile: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyFloat: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyInteger: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyIterator: org.python.core.PyString __doc__next>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Field.get*;<org.python.core.PyList: java.lang.Class exposed_base>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyList: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyLong: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyModule: org.python.core.PyObject __dict__>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.PyObject: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyProperty: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyStaticMethod: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyString: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PySuper: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PySystemState: int hexversion>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.PySystemState: int maxint>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.PySystemState: java.lang.String copyright>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.PySystemState: java.lang.String exec_prefix>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.PySystemState: java.lang.String platform>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.PySystemState: java.lang.String prefix>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.PySystemState: java.lang.String version>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.PySystemState: org.python.core.PyList argv>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.PySystemState: org.python.core.PyList path>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.PySystemState: org.python.core.PyObject modules>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Field.get*;<org.python.core.PyTuple: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyType: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyUnicode: java.lang.Class exposed_base>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.core.PyUnicode: java.lang.String exposed_name>;org.python.core.PyType.exposed_decl_get_object;;isAccessible=false;
Field.get*;<org.python.modules._sre: int MAGIC>;org.python.core.PyReflectedField._doget;;isAccessible=false;
Method.invoke;<java.io.File: boolean isAbsolute()>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<java.io.File: boolean isDirectory()>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<java.io.File: java.lang.String getAbsolutePath()>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<java.io.File: java.lang.String getName()>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<java.io.File: java.lang.String getParent()>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<java.io.File: java.lang.String getPath()>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<java.lang.System: java.lang.String getProperty(java.lang.String)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)>;org.python.modules.time.getDisplayName;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: boolean callable(org.python.core.PyObject)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: boolean hasattr(org.python.core.PyObject,org.python.core.PyString)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: char unichr(int)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: org.python.core.PyObject getattr(org.python.core.PyObject,org.python.core.PyString)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: org.python.core.PyObject map(org.python.core.PyObject[])>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: org.python.core.PyObject min(org.python.core.PyObject[])>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: org.python.core.PyObject reduce(org.python.core.PyObject,org.python.core.PyObject,org.python.core.PyObject)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: org.python.core.PyObject xrange(int,int)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: org.python.core.PyObject xrange(int)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: org.python.core.PyString intern(org.python.core.PyString)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: void classDictInit(org.python.core.PyObject)>;org.python.core.PyJavaClass.initialize;;isAccessible=false;
Method.invoke;<org.python.core.__builtin__: void setattr(org.python.core.PyObject,org.python.core.PyString,org.python.core.PyObject)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.exceptions: org.python.core.PyObject empty__init__(org.python.core.PyObject[],java.lang.String[])>;org.python.core.JavaFunc.__call__;;isAccessible=false;
Method.invoke;<org.python.core.exceptions: org.python.core.PyObject EnvironmentError(org.python.core.PyObject[],java.lang.String[])>;org.python.core.JavaFunc.__call__;;isAccessible=false;
Method.invoke;<org.python.core.exceptions: org.python.core.PyObject Exception(org.python.core.PyObject[],java.lang.String[])>;org.python.core.JavaFunc.__call__;;isAccessible=false;
Method.invoke;<org.python.core.exceptions: org.python.core.PyObject SyntaxError(org.python.core.PyObject[],java.lang.String[])>;org.python.core.JavaFunc.__call__;;isAccessible=false;
Method.invoke;<org.python.core.exceptions: org.python.core.PyObject SystemExit(org.python.core.PyObject[],java.lang.String[])>;org.python.core.JavaFunc.__call__;;isAccessible=false;
Method.invoke;<org.python.core.exceptions: void classDictInit(org.python.core.PyObject)>;org.python.core.PyJavaClass.initialize;;isAccessible=false;
Method.invoke;<org.python.core.exceptions: void Exception__init__(org.python.core.PyObject[],java.lang.String[])>;org.python.core.JavaFunc.__call__;;isAccessible=false;
Method.invoke;<org.python.core.JavaImporter: org.python.core.PyObject find_module(java.lang.String,org.python.core.PyObject)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.JavaImporter: org.python.core.PyObject load_module(java.lang.String)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.PrecompiledImporter: org.python.core.PyObject find_module(java.lang.String,org.python.core.PyObject)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.PyArray: void classDictInit(org.python.core.PyObject)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyBuiltinFunction: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyClassMethod: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyComplex: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyDictionary: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyEnumerate: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyFile: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyFloat: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyInteger: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyList: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyLong: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyObject: org.python.core.PyType getType()>;org.python.core.PyGetSetDescr.__get__;;isAccessible=false;
Method.invoke;<org.python.core.PyObject: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyProperty: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyStaticMethod: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyStringMap: org.python.core.PyList keys()>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.PyStringMap: org.python.core.PyList values()>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.PyStringMap: void clear()>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.PyStringMap: void update(org.python.core.PyStringMap)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.core.PyString: void classDictInit(org.python.core.PyObject)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyString: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PySuper: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyTuple: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyType: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.core.PyUnicode: void typeSetup(org.python.core.PyObject,org.python.core.PyType$Newstyle)>;org.python.core.PyType.fillFromClass;;isAccessible=false;
Method.invoke;<org.python.modules.operator: void classDictInit(org.python.core.PyObject)>;org.python.core.PyJavaClass.initialize;;isAccessible=false;
Method.invoke;<org.python.modules.os: void classDictInit(org.python.core.PyObject)>;org.python.core.PyJavaClass.initialize;;isAccessible=false;
Method.invoke;<org.python.modules._sre: org.python.modules.sre.PatternObject compile(org.python.core.PyString,int,org.python.core.PyObject,int,org.python.core.PyObject,org.python.core.PyObject)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.modules.time: org.python.core.PyTuple localtime(double)>;org.python.core.PyReflectedFunction.__call__;;isAccessible=false;
Method.invoke;<org.python.modules.time: void classDictInit(org.python.core.PyObject)>;org.python.core.PyJavaClass.initialize;;isAccessible=false;
Method.invoke;<org.python.modules.types: void classDictInit(org.python.core.PyObject)>;org.python.core.PyJavaClass.initialize;;isAccessible=false;
Method.invoke;<sun.util.calendar.ZoneInfo: int getDSTSavings()>;org.python.modules.time.getDSTSavings;;isAccessible=false;
